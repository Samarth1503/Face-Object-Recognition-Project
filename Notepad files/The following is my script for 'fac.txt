The following is my script for 'face_recognition', suggest how can I make the code faster, make the 'x' of the GUI functional, the accuracy of the AI recognition model sucks suggest how can I improve it:

import cv2
import face_recognition
import os
import numpy as np

# Load known face encodings and names
FACES_DIR = "data/faces"

def load_known_faces():
    known_encodings = []
    known_names = []
    for folder_name in os.listdir(FACES_DIR):
        folder_path = os.path.join(FACES_DIR, folder_name)
        if os.path.isdir(folder_path):
            for filename in os.listdir(folder_path):
                if filename.endswith(".jpg") or filename.endswith(".png"):
                    img_path = os.path.join(folder_path, filename)
                    image = face_recognition.load_image_file(img_path)
                    encoding = face_recognition.face_encodings(image)
                    if encoding:
                        known_encodings.append(encoding[0])
                        known_names.append(folder_name)
    return known_encodings, known_names

def recognize_face_webcam():
    known_encodings, known_names = load_known_faces()
    cap = cv2.VideoCapture(0)

    while True:
        ret, frame = cap.read()
        if not ret:
            break

        rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        face_locations = face_recognition.face_locations(rgb_frame)
        face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)

        for face_encoding, (top, right, bottom, left) in zip(face_encodings, face_locations):
            matches = face_recognition.compare_faces(known_encodings, face_encoding)
            name = "Unknown"
            if True in matches:
                match_index = np.argmin(face_recognition.face_distance(known_encodings, face_encoding))
                name = known_names[match_index]

            cv2.rectangle(frame, (left, top), (right, bottom), (0, 255, 0), 2)
            cv2.putText(frame, name, (left, top - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2)

        cv2.imshow("Face Recognition", frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    recognize_face_webcam()


