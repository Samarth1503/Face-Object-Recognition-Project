Make the following changes in the code:
1) Save face encodings to a file (e.g., using pickle) and load them directly instead of recalculating every time.
2) Write a code using MediaPipe as its library








1) Make the 'x' of the GUI quit the program
2) Duplicate the webcam feed, use one for the face recognition which wouldn't be shown in the GUI (lets call it Feed1) and the other will be shown to the user (lets call it Feed2). Process every 2nd or 3rd frame instead of all frames of Feed1 to reduce CPU load without noticeable performance loss. Recognise the Face from Feed1 and according show the Square on Feed2, this will make Feed2 as smooth as possible.
3) Make the code as modular as possible
4) Run the 'Loading faces' and 'Loading webcam' run simultaneously so the program takes less time all together to start.
5) Add a button at the top left of the GUI that redirects the user to 'app.py'




Im getting this error:
C:\Users\58008_Rock\Desktop\College\VU\FY Sem 2\Python\FaceObjectRecognitionApp>python recognition\face_recognition_script.py
[INFO] Loading known faces...
[ WARN:1@12.669] global cap.cpp:480 cv::VideoCapture::open VIDEOIO(DSHOW): backend is generally available but can't be used to capture by index
[ERROR] Cannot open webcam.
[INFO] Loaded 8 known faces.
[INFO] Application closed.


Make sure that the code uses input of only 1 single camera. for the code duplicate the input of that webcam and use one for face recognition which will not be shown to the user and use the square frame of the recognised feed on the other feed that is going to be shown to the user. 




close_button, minimize_button